


buildscript {
    ext{
        sdkRoot = System.getenv("ANDROID_HOME")
    }
    }
plugins{
    id "java"
}

sourceSets.main.java.srcDirs = ["src"]

repositories{
    mavenLocal()
    mavenCentral()
    maven { url "https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
    maven{ url 'https://www.jitpack.io' }
}


tasks.withType(JavaCompile).configureEach {
    targetCompatibility = 16
    sourceCompatibility = JavaVersion.VERSION_16
    options.encoding = 'UTF-8'
}

dependencies{
    compileOnly files("D:/桌面/GAMES/MDT/jre/desktop.jar")
}

tasks.register('jarAndroid') {
    dependsOn jar

    doLast {

        if (!new File("$sdkRoot").exists()) throw new GradleException("No valid Android SDK found. Ensure that ANDROID_HOME is set to your Android SDK directory.");

        def platformRoot = new File("$sdkRoot/platforms/").listFiles().sort().reverse().find { f -> new File(f, "android.jar").exists() }

        if (!platformRoot) throw new GradleException("No android.jar found. Ensure that you have an Android platform installed.")

        //collect dependencies needed for desugaring
        def dependencies = (configurations.compileClasspath.asList() + configurations.runtimeClasspath.asList() + [new File(platformRoot, "android.jar")]).collect { "--classpath $it.path" }.join(" ")

        // def buildToolsDir = new File("$sdkRoot/build-tools/").listFiles().sort().reverse().find { f -> f.isDirectory() && new File(f, "d8").exists() }  
        // if (!buildToolsDir) throw new GradleException("No valid build-tools directory found containing 'd8'.")  
        // def d8Path = new File(buildToolsDir, "d8").absolutePath  

        // "$d8Path $dependencies --min-api 14 --output ${project.archivesBaseName}Android.jar ${project.archivesBaseName}Desktop.jar"  
        //     .execute(null, new File("$buildDir/libs")).waitForProcessOutput(System.out, System.err)


        //dex and desugar files - this requires d8 in your PATH
        "$sdkRoot/build-tools/35.0.0/d8.bat $dependencies --min-api 14 --output ${project.archivesBaseName}Android.jar ${project.archivesBaseName}Desktop.jar"
                .execute(null, new File("$buildDir/libs")).waitForProcessOutput(System.out, System.err)
    }
}

jar{
    archiveFileName = "${project.archivesBaseName}Desktop.jar"

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE;

    from{
        configurations.runtimeClasspath.collect{ it.isDirectory() ? it : zipTree(it) }
    }

    from(rootDir){
        include "mod.hjson"
    }
//东西在这"D:\Program Files\JetBrains\gradle-8.12-all"下一步是？
    from("assets/"){
        include "**"
    }
}

tasks.register('deploy', Jar) {
    dependsOn jarAndroid
    dependsOn jar
    archiveFileName = "${project.archivesBaseName}.jar"

    from { [zipTree("$buildDir/libs/${project.archivesBaseName}Desktop.jar"), zipTree("$buildDir/libs/${project.archivesBaseName}Android.jar")] }

    doLast {
        delete {
            delete "$buildDir/libs/${project.archivesBaseName}Desktop.jar"
            delete "$buildDir/libs/${project.archivesBaseName}Android.jar"
        }
    }
}
